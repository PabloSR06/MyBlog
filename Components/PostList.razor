@using Models;
@inject HttpClient? HttpClient;
@inject NavigationManager? NavigationManager;

@if (isLoaded)
{
    <div class="blogGrid">
        @foreach (var post in Posts)
        {
            <div class="blogList-container" onclick="@(() => goToPost(post.fileName))">
                <h2 class="blogList-title">@post.Title</h2>
                <div class="blogList-info">
                    <div class="tag-list">
                        @foreach (var tag in post.tags)
                        {
                            <p class="tag">@tag</p>
                        }
                    </div>
                    <p class="blogList-date">@post.Date</p>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>Cargando</p>
}




@code {

    private List<Post> Posts = new();

    public bool isLoaded { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        Posts = await HttpClient.GetFromJsonAsync<List<Post>>("PostInfo.json") ?? new();
        Posts?.Reverse();
        isLoaded = true;
        StateHasChanged();
    }

    private void goToPost(string fileName)
    {
        var x = "";

        NavigationManager.NavigateTo(fileName);
    }
}
