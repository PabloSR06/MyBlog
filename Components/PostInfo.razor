@using Models;
@inject HttpClient? HttpClient;
@using Markdig;
@inject NavigationManager? NavigationManager;


<PageTitle>@PostData?.Title</PageTitle>
<HeadContent>
    <meta property="og:title" content="@PostData?.Title - Pablo Suarez Romero">
    <meta property="og:description" content="@PostData?.description">
    <meta name="twitter:title" content="@PostData?.Title - Pablo Suarez Romero" />
    <meta name="twitter:description" content="@PostData?.description" />
</HeadContent>
<div class="post">
    <div class="post-info">
        <h2 class="post-title">@PostData?.Title</h2>
        <p class="post-date">@PostData?.Date</p>
    </div>
    <div>
        <div class="post-content">
            @((MarkupString)Text)
            </div>
    </div>
    <div style="margin:50px;"></div>
</div>

@code {

    [Parameter]
    public string? Path { get; set; }

    private string Text = "";

    private Post? PostData { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var empty = String.Empty;
        var posts = await HttpClient.GetFromJsonAsync<List<Post>>("PostInfo.json") ?? new();
        var found =  posts.Find(x=> x.fileName.Equals(Path));

        if (found != null)
        {
            empty = await HttpClient.GetStringAsync($"/files/posts/{Path}.md");
            Text = Markdown.ToHtml(empty);
            PostData = found ?? new();
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }
}